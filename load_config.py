import os as os
import csv as csv

'''
returns a dictionary, where 
    [k]: the alias (if any, autogenerated if none)
    [v]: a list where
        [0]: x coordinate
        [1]: y coordinate
        [2]: x value in the button grid
        [3]: y value in the button grid
'''
def load_config(filename):
    if os.path.isfile(filename):
        with open(filename, newline='') as csvfile:
            file = csv.reader(csvfile, delimiter=',', quotechar='|')

            # skipping the headers
            next(file)

            # creating some values to track which row and column it is at and a dictionary to store all the coordinates
            x_coordinates = []
            y_coordinates = []
            named_coordinates = {}

            for row in file:
                if float(row[0]) not in x_coordinates:
                    x_coordinates.append(float(row[0]))
                if float(row[1]) not in y_coordinates:
                    y_coordinates.append(float(row[1]))

            # sorting the coordinates so that we know what's the name
            x_coordinates.sort()
            y_coordinates.sort()

            #bringing the header back to the start of the file and skipping headers again
            csvfile.seek(0)
            next(file)

            for row in file:
                # if there isn't an alias for the solution
                if row[2] != '':
                    named_coordinates["{} ({})".format(chr(ord('@')+(x_coordinates.index(float(row[0]))+1))+str(y_coordinates.index(float(row[1]))+1), row[2])] = [row[0], row[1], x_coordinates.index(float(row[0])), y_coordinates.index(float(row[1]))]
                else:
                    named_coordinates[chr(ord('@')+(x_coordinates.index(float(row[0]))+1))+str(y_coordinates.index(float(row[1]))+1)] = [row[0], row[1], x_coordinates.index(float(row[0])), y_coordinates.index(float(row[1]))]

        # close the file
        csvfile.close()

        return named_coordinates

if __name__ == '__main__':
    solutions = load_config('Solutions.csv')
    print(solutions)